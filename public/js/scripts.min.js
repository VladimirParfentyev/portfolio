"use strict";function burgerMenu(){var e=document.querySelector(".burger"),t=document.querySelector(".menu__list");e.addEventListener("click",function(){t.classList.contains("active")?(t.classList.remove("active"),e.classList.remove("active-burger")):(t.classList.add("active"),e.classList.add("active-burger"))}),window.addEventListener("resize",function(){768<window.innerWidth&&(t.classList.remove("active"),e.classList.remove("active-burger"))})}function fixedNav(){var e=document.querySelector("nav");500<=window.scrollY?e.classList.add("fixed__nav"):e.classList.remove("fixed__nav")}new SmoothScroll('a[href*="#"]'),new Swiper(".swiper-container",{spaceBetween:20,loop:!0,centeredSlides:!0,navigation:{nextEl:".arrow__btn-next",prevEl:".arrow__btn-prev"},breakpoints:{320:{slidesPerView:1},768:{slidesPerView:2}}}),function(){var t=document.querySelector(".cursor"),n=document.querySelector(".follower"),e=document.querySelectorAll(".link"),a=0,l=0,r=0,c=0;TweenMax.to({},.01,{repeat:-1,onRepeat:function(){a+=(r-a)/6,l+=(c-l)/6,TweenMax.set(n,{css:{left:a-12,top:l-12}}),TweenMax.set(t,{css:{left:r,top:c}})}}),window.addEventListener("mousemove",function(e){r=e.clientX,c=e.clientY}),e.forEach(function(e){e.addEventListener("mouseenter",function(){t.classList.add("active"),n.classList.add("active")}),e.addEventListener("mouseleave",function(){t.classList.remove("active"),n.classList.remove("active")})})}(),burgerMenu();var element=document.querySelector(".phone__input"),maskOptions={mask:"+{7}(000)000-00-00"},mask=IMask(element,maskOptions);function tabs(e,t,n,a){var l=4<arguments.length&&void 0!==arguments[4]?arguments[4]:"flex",r=document.querySelector(e),c=document.querySelectorAll(t),i=document.querySelectorAll(n);function o(){i.forEach(function(e){e.style.display="none"}),c.forEach(function(e){e.classList.remove(a)})}function s(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;i[e].style.display=l,c[e].classList.add(a)}o(),s(),r.addEventListener("click",function(e){var n=e.target;(n.classList.contains(t.replace(/\./,""))||n.parentNode.classList.contains(t.replace(/\./,"")))&&c.forEach(function(e,t){n!=e&&n.parentNode!=e||(o(),s(t))})})}document.querySelectorAll(".accordion__item-trigger").forEach(function(t){t.addEventListener("click",function(){var e=t.parentNode;e.classList.contains("accordion__item-active")?e.classList.remove("accordion__item-active"):(document.querySelectorAll(".accordion__item").forEach(function(e){return e.classList.remove("accordion__item-active")}),e.classList.add("accordion__item-active"))})}),tabs(".tabs__header",".tabs__header-item",".tabs__content-item","active"),window.addEventListener("load",windowLoadHandler,!1);var Debugger=function(){};function windowLoadHandler(){canvasApp()}function canvasApp(){var t,n,a,l,r,i,o,c,s,d,u,v,f,m,p,h,y,_,g,L,x,w,M,k,b,S,E,q,V,Y,X,j,P,A,I,z,T,e=document.getElementById("canvasOne"),Z=e.getContext("2d");function N(){if(a<=++l)for(j=l=0;j<r;j++){P=2*Math.random()*Math.PI,A=Math.acos(2*Math.random()-1),I=h*Math.sin(A)*Math.cos(P),z=h*Math.sin(A)*Math.sin(P),T=h*Math.cos(A);var e=D(I,y+z,_+T,.002*I,.002*z,.002*T);e.attack=50,e.hold=50,e.decay=160,e.initValue=0,e.holdValue=c,e.lastValue=0,e.stuckTime=80+20*Math.random(),e.accelX=0,e.accelY=k,e.accelZ=0}for(m=(m+p)%(2*Math.PI),E=Math.sin(m),q=Math.cos(m),Z.fillStyle="#1F1F1F",Z.fillRect(0,0,t,n),e=i.first;null!=e;)S=e.next,e.age++,e.age>e.stuckTime&&(e.velX+=e.accelX+x*(2*Math.random()-1),e.velY+=e.accelY+w*(2*Math.random()-1),e.velZ+=e.accelZ+M*(2*Math.random()-1),e.x+=e.velX,e.y+=e.velY,e.z+=e.velZ),V=q*e.x+E*(e.z-_),Y=-E*e.x+q*(e.z-_)+_,d=s/(s-Y),e.projX=V*d+u,e.projY=e.y*d+v,e.age<e.attack+e.hold+e.decay?e.age<e.attack?e.alpha=(e.holdValue-e.initValue)/e.attack*e.age+e.initValue:e.age<e.attack+e.hold?e.alpha=e.holdValue:e.age<e.attack+e.hold+e.decay&&(e.alpha=(e.lastValue-e.holdValue)/e.decay*(e.age-e.attack-e.hold)+e.holdValue):e.dead=!0,e.projX>t||e.projX<0||e.projY<0||e.projY>n||f<Y||e.dead?F(e):(X=1<(X=1-Y/L)?1:X<0?0:X,Z.fillStyle=b+X*e.alpha+")",Z.beginPath(),Z.arc(e.projX,e.projY,d*g,0,2*Math.PI,!1),Z.closePath(),Z.fill()),e=S}function D(e,t,n,a,l,r){var c;return null!=o.first?null!=(c=o.first).next?(o.first=c.next,c.next.prev=null):o.first=null:c={},null==i.first?((i.first=c).prev=null,c.next=null):(c.next=i.first,i.first.prev=c,(i.first=c).prev=null),c.x=e,c.y=t,c.z=n,c.velX=a,c.velY=l,c.velZ=r,c.age=0,c.dead=!1,Math.random()<.5?c.right=!0:c.right=!1,c}function F(e){i.first==e?null!=e.next?(e.next.prev=null,i.first=e.next):i.first=null:null==e.next?e.prev.next=null:(e.prev.next=e.next,e.next.prev=e.prev),null==o.first?((o.first=e).prev=null,e.next=null):(e.next=o.first,o.first.prev=e,(o.first=e).prev=null)}l=(a=1)-1,r=8,b="rgba("+255+","+255+","+255+",",c=1,t=e.width,n=e.height,u=t/2,v=n/2,f=(s=320)-2,i={},o={},M=w=x=.1,g=2.5,y=k=0,_=-3-(h=280),L=-750,p=2*Math.PI/1600,m=0,setInterval(N,1e3/24)}function bindModal(e,t,n){e=document.querySelector(e),t=document.querySelector(t),n=document.querySelector(n),e.addEventListener("click",function(e){e.preventDefault(),t.style.display="flex"}),n.addEventListener("click",function(){t.style.display="none"}),t.addEventListener("click",function(e){e.target===t&&(t.style.display="none")})}Debugger.log=function(e){try{console.log(e)}catch(e){return}},bindModal(".modal__btn",".modal__wrapper",".modal__close");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,